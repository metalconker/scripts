version: '3.7'  

  # NGINX Proxy
services:
  nginx-proxy:
    build: ./config/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxy-network
      - nextcloud-network
      - wordpress-network
      - bitwarden-network
      - cryptpad-network
      - searxng-network
      - CK_proxy-network
      - CK_wordpress-network
    volumes:
      - ./volumes/nginx/html:/usr/share/nginx/html
      - ./volumes/nginx/conf:/etc/nginx/conf.d:rw
      - ./volumes/nginx/vhost:/etc/nginx/vhost.d:rw
      - ./volumes/nginx/certs:/etc/nginx/certs:ro
      - ./volumes/nginx/logs:/var/log/nginx
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - DEFAULT_HOST=${NGINX_DEFAULT_HOST}
      - VIRTUAL_HOST_RESOLVER=${NGINX_VIRTUAL_HOST_RESOLVER}
      - RESOLVER=${NGINX_RESOLVER}
      - TRUST_DOWNSTREAM_PROXY=${NGINX_TRUST_DOWNSTREAM_PROXY}
      - ENABLE_IPV6=${NGINX_ENABLE_IPV6}
    restart: always

  # ACME Companion
  acme-companion:
    image: nginxproxy/acme-companion:2.2.4
    container_name: acme-companion
    networks:
      - proxy-network
    volumes_from:
      - nginx-proxy
    volumes:
      - ./volumes/nginx/certs:/etc/nginx/certs:rw
      - ./volumes/nginx/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=${ACME_NGINX_PROXY_CONTAINER}
      - DEFAULT_EMAIL=${ACME_DEFAULT_EMAIL}
      - DHPARAM_GENERATION=${ACME_DHPARAM_GENERATION}
    depends_on:
      - nginx-proxy
    restart: always

  # Nextcloud DB
  nextcloud-mariadb:
    image: mariadb:10.10
    container_name: nextcloud-mariadb
    networks:
      - nextcloud-network
    volumes:
      - ./volumes/nextcloud-mariadb:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXT_CLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${NEXT_CLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${NEXT_CLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${NEXT_CLOUD_MYSQL_USER}
      - MARIADB_AUTO_UPGRADE=${NEXT_CLOUD_MARIADB_AUTO_UPGRADE}
      - MARIADB_DISABLE_UPGRADE_BACKUP=${NEXT_CLOUD_MARIADB_DISABLE_UPGRADE_BACKUP}
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    depends_on:
      - nextcloud-redis
    restart: always

  # Nextcloud Redis
  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    networks:
      - nextcloud-network
    restart: always

  # Nextcloud app
  nextcloud-app:
    image: nextcloud:apache
    container_name: nextcloud-app
    ports:
      - 8080:80
    networks:
      - nextcloud-network
    volumes:
      - ./volumes/nextcloud-app:/var/www/html
      - /etc/localtime:/etc/localtime:ro
    environment:
      - OVERWRITEPROTOCOL=${NEXT_CLOUD_OVERWRITEPROTOCOL}
      - MYSQL_PASSWORD=${NEXT_CLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${NEXT_CLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${NEXT_CLOUD_MYSQL_USER}
      - VIRTUAL_HOST=${NEXT_CLOUD_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${NEXT_CLOUD_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${NEXT_CLOUD_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${NEXT_CLOUD_LETSENCRYPT_TEST}
      - MYSQL_HOST=${NEXT_CLOUD_MYSQL_HOST}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXT_CLOUD_NEXTCLOUD_TRUSTED_DOMAINS}
      - REDIS_HOST=${NEXT_CLOUD_REDIS_HOST}
    depends_on:
      - nextcloud-mariadb
      - nextcloud-redis
    restart: always

  # Nextcloud cron
  nextcloud-cron:
    image: nextcloud:apache
    entrypoint: /cron.sh
    container_name: nextcloud-cron
    networks:
      - nextcloud-network
    volumes:
      - ./volumes/nextcloud-app:/var/www/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - nextcloud-app
      - nextcloud-mariadb
      - nextcloud-redis
    restart: always

  # Wordpress DB
  wordpress-mariadb:
    image: mariadb:10.10
    container_name: wordpress-mariadb
    networks:
      - wordpress-network
    volumes:
      - ./volumes/wordpress-mariadb:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${WORDPRESS_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${WORDPRESS_MYSQL_DATABASE}
      - MYSQL_USER=${WORDPRESS_MYSQL_USER}
      - MYSQL_PASSWORD=${WORDPRESS_MYSQL_PASSWORD}
    restart: always

# Wordpress app
  wordpress-app:
    image: wordpress:latest
    container_name: wordpress-app
    networks:
      - wordpress-network
    volumes:
      - ./config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./volumes/wordpress-app:/var/www/html
    environment:
      - OVERWRITEPROTOCOL=${WORDPRESS_OVERWRITEPROTOCOL}
      - WORDPRESS_DB_HOST=${WORDPRESS_WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${WORDPRESS_WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${WORDPRESS_WORDPRESS_DB_NAME}
      - VIRTUAL_HOST=${WORDPRESS_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${WORDPRESS_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${WORDPRESS_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${WORDPRESS_LETSENCRYPT_TEST}
    depends_on:
      - acme-companion
      - nginx-proxy
      - wordpress-mariadb
    restart: always

  # # Bitwarden DB
  # bitwarden-mariadb:
  #   image: mariadb:10.10
  #   container_name: bitwarden-mariadb
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${BITWARDEN_MYSQL_ROOT_PASSWORD}
  #     - MYSQL_DATABASE=${BITWARDEN_MYSQL_DATABASE}
  #     - MYSQL_USER=${BITWARDEN_MYSQL_USER}
  #     - MYSQL_PASSWORD=${BITWARDEN_MYSQL_PASSWORD}
  #   networks:
  #     - bitwarden-network
  #   volumes:
  #     - ./volumes/bitwarden-mariadb:/var/lib/mysql
  #   restart: always

  # # Bitwarden app
  # bitwarden-app:
  #   image: vaultwarden/server:alpine
  #   container_name: bitwarden-app
  #   environment:      
  #     - WEB_VAULT_ENABLED=${BITWARDEN_WEB_VAULT_ENABLED}
  #     - SIGNUPS_ALLOWED=${BITWARDEN_SIGNUPS_ALLOWED}
  #     - OVERWRITEPROTOCOL=${BITWARDEN_OVERWRITEPROTOCOL}
  #     - VIRTUAL_HOST=${BITWARDEN_VIRTUAL_HOST}
  #     - LETSENCRYPT_HOST=${BITWARDEN_LETSENCRYPT_HOST}
  #     - LETSENCRYPT_EMAIL=${BITWARDEN_LETSENCRYPT_EMAIL}
  #     - LETSENCRYPT_TEST=${BITWARDEN_LETSENCRYPT_TEST}
  #   networks:
  #     - bitwarden-network
  #   depends_on:
  #     - acme-companion
  #     - nginx-proxy
  #     - bitwarden-mariadb
  #   restart: always

  # SearXNG
  searxng-app:
    build: ./config/searxng-app
    container_name: searxng-app
    networks:
      - searxng-network
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - ./volumes/searxng-app/data:/srv/searxng/data:rw
      - ./volumes/searxng-app/etc/searxng:/etc/searxng
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    environment:
      - VIRTUAL_HOST=${SEARXNG_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${SEARXNG_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${SEARXNG_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${SEARXNG_LETSENCRYPT_TEST}
      - VIRTUAL_PORT=${SEARXNG_VIRTUAL_PORT}
      - SEARXNG_BASE_URL=https://${SEARXNG_VIRTUAL_HOST:-localhost}/
    depends_on:
      - acme-companion
      - nginx-proxy
      - searxng-redis
    restart: always

  # Redis SearXNG
  searxng-redis:
    image: "redis:alpine"
    container_name: searxng-redis
    networks:
      - searxng-network
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    command: redis-server --save "" --appendonly "no"
    restart: always

  # Cryptpad
  cryptpad-app:
    build: ./config/cryptpad-app
    container_name: cryptpad-app
    ports:
      - "0.0.0.0:3000:3000"
      - "0.0.0.0:3001:3001"
    networks:
      - cryptpad-network
    volumes:
      - ./volumes/cryptpad/blob:/cryptpad/blob
      - ./volumes/cryptpad/block:/cryptpad/block
      - ./volumes/cryptpad/customize:/cryptpad/customize
      - ./volumes/cryptpad/data:/cryptpad/data
      - ./volumes/cryptpad/datastore:/cryptpad/datastore
      - ./volumes/cryptpad/config/config.js:/cryptpad/config/config.js
    environment:
      - VIRTUAL_HOST=${CRYPTPAD_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${CRYPTPAD_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${CRYPTPAD_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${CRYPTPAD_LETSENCRYPT_TEST}
      - CPAD_MAIN_DOMAIN=${CRYPTPAD_CPAD_MAIN_DOMAIN}
      - CPAD_SANDBOX_DOMAIN=${CRYPTPAD_CPAD_SANDBOX_DOMAIN}
      - CPAD_HTTP2_DISABLE=${CRYPTPAD_CPAD_HTTP2_DISABLE}
      - VIRTUAL_PORT=${CRYPTPAD_VIRTUAL_PORT}
    depends_on:
      - acme-companion
      - nginx-proxy
    restart: always
      

  # Wordpress DB
  CK_wordpress-mariadb:
    image: mariadb:10.10
    container_name: CK_wordpress-mariadb
    networks:
      - CK_wordpress-network
    volumes:
      - ./volumes/CK_wordpress-mariadb:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${CK_WORDPRESS_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${CK_WORDPRESS_MYSQL_DATABASE}
      - MYSQL_USER=${CK_WORDPRESS_MYSQL_USER}
      - MYSQL_PASSWORD=${CK_WORDPRESS_MYSQL_PASSWORD}
    restart: always

# Wordpress app
  CK_wordpress-app:
    image: wordpress:latest
    container_name: CK_wordpress-app
    networks:
      - CK_wordpress-network
    volumes:
      - ./volumes/CK_wordpress-app:/var/www/html
    environment:
      - OVERWRITEPROTOCOL=${CK_WORDPRESS_OVERWRITEPROTOCOL}
      - WORDPRESS_DB_HOST=${CK_WORDPRESS_WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${CK_WORDPRESS_WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${CK_WORDPRESS_WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${CK_WORDPRESS_WORDPRESS_DB_NAME}
      - VIRTUAL_HOST=${CK_WORDPRESS_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${CK_WORDPRESS_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${CK_WORDPRESS_LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${CK_WORDPRESS_LETSENCRYPT_TEST}
    depends_on:
      - acme-companion
      - nginx-proxy
      - CK_wordpress-mariadb
    restart: always

# Networks

networks:
  # Rayray
  proxy-network:
  nextcloud-network:
  wordpress-network:
  bitwarden-network:
  searxng-network:
    ipam:
      driver: default
  send-network:
  cryptpad-network:
  standardnotes-network:

  #Chadz
  CK_proxy-network:
  CK_wordpress-network: